{
  "version": 3,
  "sources": ["../../emoji-picker-react/src/DomUtils/classNames.ts", "../../emoji-picker-react/src/DomUtils/focusElement.ts", "../../emoji-picker-react/src/components/context/ElementRefContext.tsx", "../../emoji-picker-react/src/DomUtils/isDarkTheme.ts", "../../emoji-picker-react/src/types/exposedTypes.ts", "../../emoji-picker-react/src/config/cdnUrls.ts", "../../emoji-picker-react/src/data/skinToneVariations.ts", "../../emoji-picker-react/src/dataUtils/emojiSelectors.ts", "../../emoji-picker-react/src/config/categoryConfig.ts", "../../emoji-picker-react/src/config/config.ts", "../../emoji-picker-react/src/components/context/PickerConfigContext.tsx", "../../emoji-picker-react/src/config/useConfig.ts", "../../emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts", "../../emoji-picker-react/src/hooks/useDebouncedState.ts", "../../emoji-picker-react/src/hooks/useDisallowedEmojis.ts", "../../emoji-picker-react/src/hooks/useInitialLoad.ts", "../../emoji-picker-react/src/components/context/PickerContext.tsx", "../../emoji-picker-react/src/hooks/useDisallowMouseMove.ts", "../../emoji-picker-react/src/DomUtils/elementPositionInRow.ts", "../../emoji-picker-react/src/DomUtils/selectors.ts", "../../emoji-picker-react/src/dataUtils/parseNativeEmoji.ts", "../../emoji-picker-react/src/dataUtils/suggested.ts", "../../emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts", "../../emoji-picker-react/src/hooks/useSetVariationPicker.ts", "../../emoji-picker-react/src/hooks/useMouseDownHandlers.ts", "../../emoji-picker-react/src/hooks/useOnScroll.ts", "../../emoji-picker-react/src/DomUtils/scrollTo.ts", "../../emoji-picker-react/src/hooks/useFocus.ts", "../../emoji-picker-react/src/hooks/useFilter.ts", "../../emoji-picker-react/src/hooks/useIsEmojiHidden.ts", "../../emoji-picker-react/src/components/atoms/Button.tsx", "../../emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js", "../../emoji-picker-react/src/components/emoji/Emoji.tsx", "../../emoji-picker-react/src/components/body/EmojiCategory.tsx", "../../emoji-picker-react/src/components/body/Suggested.tsx", "../../emoji-picker-react/src/components/body/EmojiList.tsx", "../../emoji-picker-react/src/DomUtils/keyboardNavigation.ts", "../../emoji-picker-react/src/components/body/EmojiVariationPicker.tsx", "../../emoji-picker-react/src/components/body/Body.tsx", "../../emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts", "../../emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts", "../../emoji-picker-react/src/components/Layout/Flex.tsx", "../../emoji-picker-react/src/components/Layout/Space.tsx", "../../emoji-picker-react/src/components/Layout/Absolute.tsx", "../../emoji-picker-react/src/components/Layout/Relative.tsx", "../../emoji-picker-react/src/components/header/SkinTonePicker.tsx", "../../emoji-picker-react/src/components/footer/Preview.tsx", "../../emoji-picker-react/src/DomUtils/categoryNameFromDom.ts", "../../emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts", "../../emoji-picker-react/src/hooks/useIsSearchMode.ts", "../../emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts", "../../emoji-picker-react/src/components/navigation/CategoryNavigation.tsx", "../../emoji-picker-react/src/components/header/Search.tsx", "../../emoji-picker-react/src/components/header/Header.tsx", "../../emoji-picker-react/src/DomUtils/getActiveElement.ts", "../../emoji-picker-react/src/hooks/useKeyboardNavigation.ts", "../../emoji-picker-react/src/hooks/preloadEmoji.ts", "../../emoji-picker-react/src/hooks/useOnFocus.ts", "../../emoji-picker-react/src/components/main/PickerMain.tsx", "../../emoji-picker-react/src/EmojiPickerReact.tsx", "../../emoji-picker-react/src/components/ErrorBoundary.tsx", "../../emoji-picker-react/src/components/emoji/ExportedEmoji.tsx", "../../emoji-picker-react/src/index.tsx"],
  "sourcesContent": ["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n", "import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n", "import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n", "export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n", "export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n", "import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n", "import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n", "import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';  \n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n", "import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n", "import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n", "import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n", "import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n", "import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n", "import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n", "import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n", "import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n", "import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n", "import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n", "import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n", "export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n", "import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n", "import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n", "import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n", "import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n", "import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n", "import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n", "import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n", "import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n", "import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n", "import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n", "import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n", "export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n", "import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n", "import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n", "import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n", "import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n", "import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n", "import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n", "import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n", "import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n", "import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n", "import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n", "import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl, ViewOnlyEmoji } from './Emoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n}) {\n  if (!unified) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={getEmojiUrl}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],
  "mappings": "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",
  "names": ["ClassNames", "asSelectors", "classNames", "map", "c", "join", "focusElement", "element", "requestAnimationFrame", "focus", "focusPrevElementSibling", "prev", "previousElementSibling", "focusNextElementSibling", "next", "nextElementSibling", "focusFirstElementChild", "first", "firstElementChild", "ElementRefContextProvider", "children", "PickerMainRef", "React", "AnchoredEmojiRef", "BodyRef", "SearchInputRef", "SkinTonePickerRef", "CategoryNavigationRef", "VariationPickerRef", "ElementRefContext", "Provider", "value", "useElementRef", "usePickerMainRef", "useAnchoredEmojiRef", "useSetAnchoredEmojiRef", "target", "current", "useBodyRef", "useSearchInputRef", "useSkinTonePickerRef", "useCategoryNavigationRef", "useVariationPickerRef", "isSystemDarkTheme", "window", "matchMedia", "matches", "SuggestionMode", "EmojiStyle", "Theme", "SkinTones", "Categories", "SkinTonePickerLocation", "CDN_URL_APPLE", "CDN_URL_FACEBOOK", "CDN_URL_TWITTER", "CDN_URL_GOOGLE", "cdnUrl", "emojiStyle", "TWITTER", "GOOGLE", "FACEBOOK", "APPLE", "skinToneVariations", "NEUTRAL", "LIGHT", "MEDIUM_LIGHT", "MEDIUM", "MEDIUM_DARK", "DARK", "skinTonesNamed", "Object", "entries", "reduce", "acc", "key", "skinTonesMapped", "mapped", "skinTone", "assign", "EmojiProperties", "emojiNames", "emoji", "name", "addedIn", "parseFloat", "added_in", "emojiName", "unifiedWithoutSkinTone", "unified", "splat", "split", "splice", "emojiUnified", "emojiHasVariations", "emojiVariationUnified", "emojisByCategory", "category", "emojis", "emojiUrlByUnified", "emojiVariations", "variations", "length", "find", "variation", "includes", "emojiByUnified", "allEmojisByUnified", "withoutSkinTone", "allEmojis", "values", "flat", "setTimeout", "Emoji", "activeVariationFromUnified", "suspectedSkinTone", "categoriesOrdered", "SUGGESTED", "SMILEYS_PEOPLE", "ANIMALS_NATURE", "FOOD_DRINK", "TRAVEL_PLACES", "ACTIVITIES", "OBJECTS", "SYMBOLS", "FLAGS", "SuggestedRecent", "configByCategory", "baseCategoriesConfig", "modifiers", "categoryFromCategoryConfig", "categoryNameFromCategoryConfig", "mergeCategoriesConfig", "userCategoriesConfig", "extra", "suggestionMode", "RECENT", "base", "getBaseConfigByCategory", "modifier", "mergeConfig", "userConfig", "basePickerConfig", "previewConfig", "config", "categories", "suggestedEmojisMode", "skinTonePickerLocation", "searchDisabled", "PREVIEW", "autoFocusSearch", "defaultSkinTone", "emojiVersion", "getEmojiUrl", "height", "lazyLoadEmojis", "onEmojiClick", "defaultOnClickHandler", "event", "basePreviewConfig", "searchPlaceHolder", "SEARCH", "skinTonesDisabled", "FREQUENT", "theme", "width", "defaultEmoji", "defaultCaption", "showPreview", "ConfigContext", "PickerConfigProvider", "usePickerConfig", "useSearchPlaceHolderConfig", "useDefaultSkinToneConfig", "useSkinTonesDisabledConfig", "useEmojiStyleConfig", "useAutoFocusSearchConfig", "useCategoriesConfig", "useOnEmojiClickConfig", "usePreviewConfig", "useThemeConfig", "AUTO", "useSuggestedEmojisModeConfig", "useLazyLoadEmojisConfig", "usePickerSizeConfig", "getDimension", "useEmojiVersionConfig", "useSearchDisabledConfig", "useSkinTonePickerLocationConfig", "useGetEmojiUrlConfig", "dimensionConfig", "alphaNumericEmojiIndex", "searchIndex", "joinedNameString", "replace", "forEach", "char", "useDebouncedState", "initialValue", "delay", "useState", "state", "setState", "timer", "useRef", "debouncedSetState", "Promise", "resolve", "clearTimeout", "useDisallowedEmojis", "DisallowedEmojisRef", "emojiVersionConfig", "useMemo", "Number", "isNaN", "disallowedEmojis", "addedInNewerVersion", "useIsEmojiDisallowed", "isEmojiDisallowed", "Boolean", "supportedLevel", "useMarkInitialLoad", "dispatch", "useEffect", "PickerContextProvider", "filterRef", "disallowClickRef", "disallowMouseRef", "disallowedEmojisRef", "suggestedUpdateState", "Date", "now", "searchTerm", "skinToneFanOpenState", "activeSkinTone", "activeCategoryState", "emojisThatFailedToLoadState", "Set", "emojiVariationPickerState", "isPastInitialLoad", "setIsPastInitialLoad", "PickerContext", "undefined", "useFilterRef", "useDisallowClickRef", "useDisallowMouseRef", "useSearchTermState", "useActiveSkinToneState", "useEmojisThatFailedToLoadState", "useIsPastInitialLoad", "useEmojiVariationPickerState", "useSkinToneFanOpenState", "useUpdateSuggested", "suggestedUpdated", "setsuggestedUpdate", "updateSuggested", "useDisallowMouseMove", "DisallowMouseRef", "disallowMouseMove", "useAllowMouseMove", "allowMouseMove", "useIsMouseDisallowed", "isMouseDisallowed", "useOnMouseMove", "bodyRef", "addEventListener", "onMouseMove", "passive", "removeEventListener", "elementCountInRow", "parent", "parentWidth", "getBoundingClientRect", "elementWidth", "Math", "floor", "elementIndexInRow", "elementLeft", "left", "parentLeft", "rowNumber", "elementHeight", "elementTop", "top", "parentTop", "round", "hasNextRow", "parentHeight", "getRowElements", "elements", "row", "elementsInRow", "lastRow", "firstElementIndex", "lastElementIndex", "slice", "getNextRowElements", "allElements", "currentRow", "nextRow", "getElementInRow", "indexInRow", "rowElements", "getElementInNextRow", "index", "nextRowElements", "getElementInPrevRow", "prevRowElements", "firstVisibleElementInContainer", "parentBottom", "bottom", "visibleElements", "elementBottom", "hasNextElementSibling", "EmojiButtonSelector", "VisibleEmojiSelector", "visible", "hidden", "buttonFromTarget", "emojiElement", "closest", "emojiFromElement", "originalUnified", "originalUnifiedFromEmojiElement", "unifiedFromEmojiElement", "isEmojiElement", "parentElement", "clientHeight", "emojiTrueOffsetTop", "button", "closestCategory", "labelHeight", "categoryLabelHeight", "elementOffsetTop", "categoryWithoutLabel", "querySelector", "categoryContent", "isEmojiBehindLabel", "emojiDistanceFromScrollTop", "queryScrollBody", "root", "scrollBody", "closestScrollBody", "scrollTop", "emojiTruOffsetLeft", "elementOffsetLeft", "offsetTop", "offsetLeft", "elementDataSetKey", "elementDataSet", "dataset", "isVisibleEmoji", "classList", "contains", "isHidden", "allVisibleEmojis", "Array", "from", "querySelectorAll", "lastVisibleEmoji", "last", "prevVisibleEmoji", "nextVisibleEmoji", "firstVisibleEmoji", "nextCategory", "prevCategory", "closestCategoryContent", "parseNativeEmoji", "hex", "String", "fromCodePoint", "parseInt", "SUGGESTED_LS_KEY", "getsuggested", "mode", "localStorage", "recent", "JSON", "parse", "getItem", "sort", "a", "b", "count", "setsuggested", "existing", "u", "nextList", "concat", "filter", "i", "original", "min", "setItem", "stringify", "useCloseAllOpenToggles", "variationPicker", "setVariationPicker", "skinToneFanOpen", "setSkinToneFanOpen", "closeAllOpenToggles", "useCallback", "useHasOpenToggles", "hasOpenToggles", "useSetVariationPicker", "setAnchoredEmojiRef", "setEmojiVariationPicker", "useMouseDownHandlers", "mouseDownTimerRef", "onClick", "emojiFromEvent", "skinToneToUse", "emojiClickOutput", "onMouseDown", "onMouseUp", "getImageUrl", "names", "useOnScroll", "onScroll", "scrollTo", "$eprBody", "scrollBy", "by", "useScrollTo", "scrollEmojiAboveLabel", "useFocusSearchInput", "useFocusSkinTonePicker", "useFocusCategoryNavigation", "useSetFilterRef", "setFilter", "setter", "useClearSearch", "applySearch", "useApplySearch", "focusSearchInput", "clearSearch", "useAppendSearch", "appendSearch", "str", "getNormalizedSearchTerm", "useFilter", "setFilterRef", "onChange", "inputValue", "nextValue", "toLowerCase", "longestMatch", "findLongestMatch", "filterEmojiObjectByKeyword", "setSearchTerm", "then", "keyword", "filtered", "hasMatch", "some", "useIsEmojiFiltered", "isEmojiFilteredBySearchTerm", "dict", "longestMatchingKey", "keys", "trim", "useIsEmojiHidden", "emojisThatFailedToLoad", "isEmojiFiltered", "failedToLoad", "has", "filteredOut", "Button", "props", "type", "className", "clsx", "ClickableEmoji", "hiddenOnSearch", "showVariations", "size", "lazyLoad", "hasVariations", "emojiHasVariatios", "ViewOnlyEmoji", "style", "fontSize", "emojiToRender", "NATIVE", "NativeEmoji", "EmojiImg", "external", "setEmojisThatFailedToLoad", "src", "alt", "loading", "onError", "add", "EmojiCategory", "categoryConfig", "categoryName", "label", "Suggested", "suggestedEmojisModeConfig", "suggested", "suggestedItem", "EmojiList", "emojiList", "RenderCategory", "isEmojiHidden", "emojisToPush", "hiddenCounter", "isDisallowed", "focusFirstVisibleEmoji", "focusAndClickFirstVisibleEmoji", "firstEmoji", "click", "focusLastVisibleEmoji", "focusNextVisibleEmoji", "focusPrevVisibleEmoji", "focusVisibleEmojiOneRowUp", "exitUp", "visibleEmojiOneRowUp", "focusVisibleEmojiOneRowDown", "visibleEmojiOneRowDown", "countInRow", "prevVisibleCategory", "nextVisibleCategory", "itemInNextRow", "Direction", "EmojiVariationPicker", "useVariationPickerTop", "getTop", "getMenuDirection", "getPointerStyle", "usePointerStyle", "pointerStyle", "ref", "Down", "clientWidth", "direction", "Up", "emojiOffsetTop", "buttonHeight", "Body", "useEmojiPreviewEvents", "allow", "setPreviewEmoji", "onEscape", "onMouseOver", "onEnter", "onLeave", "e", "relatedTarget", "useIsSkinToneInSearch", "skinTonePickerLocationConfig", "useIsSkinToneInPreview", "FlexDirection", "Flex", "ROW", "Space", "flex", "Absolute", "position", "Relative", "ITEM_SIZE", "SkinTonePickerMenu", "right", "SkinTonePicker", "SkinTonePickerDirection", "VERTICAL", "HORIZONTAL", "isDisabled", "isOpen", "setIsOpen", "setActiveSkinTone", "fullWidth", "expandedSize", "vertical", "open", "flexBasis", "skinToneVariation", "active", "transform", "tabIndex", "Preview", "isSkinToneInPreview", "PreviewBody", "previewEmoji", "variationPickerEmoji", "show", "PreviewContent", "defaultText", "categoryNameFromDom", "$category", "getAttribute", "useActiveCategoryScrollDetection", "setActiveCategory", "visibleCategories", "Map", "observer", "IntersectionObserver", "entry", "id", "set", "intersectionRatio", "ratios", "lastCategory", "ratio", "threshold", "el", "observe", "useIsSearchMode", "useScrollCategoryIntoView", "scrollCategoryIntoView", "CategoryNavigation", "activeCategory", "isSearchMode", "categoriesConfig", "SearchContainer", "isSkinToneInSearch", "Search", "inc", "setInc", "placeholder", "autoFocus", "input", "CssSearch", "onFocus", "CSS_SEARCH_SELECTOR", "emojiPicker", "searchQuery", "Header", "getActiveElement", "document", "activeElement", "KeyboardEvents", "useKeyboardNavigation", "usePickerMainKeyboardEvents", "useSearchInputKeyboardEvents", "useSkinTonePickerKeyboardEvents", "useCategoryNavigationKeyboardEvents", "useBodyKeyboardEvents", "onKeyDown", "Escape", "preventDefault", "focusSkinTonePicker", "setSkinToneFanOpenState", "goDownFromSearchInput", "useGoDownFromSearchInput", "ArrowRight", "ArrowDown", "Enter", "onType", "useOnType", "ArrowLeft", "focusNextSkinTone", "focusPrevSkinTone", "ArrowUp", "goUpFromBody", "useGoUpFromBody", "focusCategoryNavigation", "goUpFromEmoji", "exitLeft", "currentSkinTone", "hasModifier", "match", "metaKey", "ctrlKey", "altKey", "preloadEmoji", "preloadedEmojs", "emojiUrl", "preloadImage", "url", "image", "Image", "useOnFocus", "PickerMain", "PickerRootElement", "searchModeActive", "searchActive", "EmojiPicker", "ErrorBoundary", "hasError", "getDerivedStateFromError", "componentDidCatch", "error", "errorInfo", "console", "render", "ExportedEmoji", "EmojiPickerReact"]
}
