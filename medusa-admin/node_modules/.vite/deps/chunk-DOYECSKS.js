import {
  __esm,
  __export
} from "./chunk-TFWDKVI3.js";

// node_modules/iso8601-duration/src/index.js
var src_exports = {};
__export(src_exports, {
  default: () => src_default,
  end: () => end,
  parse: () => parse,
  pattern: () => pattern,
  toSeconds: () => toSeconds
});
var numbers, weekPattern, datePattern, timePattern, iso8601, objMap, defaultDuration, pattern, parse, end, toSeconds, src_default;
var init_src = __esm({
  "node_modules/iso8601-duration/src/index.js"() {
    numbers = "\\d+(?:[\\.,]\\d+)?";
    weekPattern = `(${numbers}W)`;
    datePattern = `(${numbers}Y)?(${numbers}M)?(${numbers}D)?`;
    timePattern = `T(${numbers}H)?(${numbers}M)?(${numbers}S)?`;
    iso8601 = `P(?:${weekPattern}|${datePattern}(?:${timePattern})?)`;
    objMap = ["weeks", "years", "months", "days", "hours", "minutes", "seconds"];
    defaultDuration = Object.freeze({
      years: 0,
      months: 0,
      weeks: 0,
      days: 0,
      hours: 0,
      minutes: 0,
      seconds: 0
    });
    pattern = new RegExp(iso8601);
    parse = (durationString) => {
      return durationString.match(pattern).slice(1).reduce((prev, next, idx) => {
        prev[objMap[idx]] = parseFloat(next) || 0;
        return prev;
      }, {});
    };
    end = (duration, startDate) => {
      duration = Object.assign({}, defaultDuration, duration);
      const timestamp = startDate ? startDate.getTime() : Date.now();
      const then = new Date(timestamp);
      then.setFullYear(then.getFullYear() + duration.years);
      then.setMonth(then.getMonth() + duration.months);
      then.setDate(then.getDate() + duration.days);
      then.setHours(then.getHours() + duration.hours);
      then.setMinutes(then.getMinutes() + duration.minutes);
      then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1e3);
      then.setDate(then.getDate() + duration.weeks * 7);
      return then;
    };
    toSeconds = (duration, startDate) => {
      duration = Object.assign({}, defaultDuration, duration);
      const timestamp = startDate ? startDate.getTime() : Date.now();
      const now = new Date(timestamp);
      const then = end(duration, now);
      const seconds = (then.getTime() - now.getTime()) / 1e3;
      return seconds;
    };
    src_default = {
      end,
      toSeconds,
      pattern,
      parse
    };
  }
});

export {
  pattern,
  parse,
  end,
  toSeconds,
  src_default,
  src_exports,
  init_src
};
//# sourceMappingURL=chunk-DOYECSKS.js.map
