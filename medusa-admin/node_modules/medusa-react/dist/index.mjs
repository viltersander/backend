import Ls from"@medusajs/medusa-js";import{QueryClientProvider as bs}from"@tanstack/react-query";import Te from"react";var Qt=Te.createContext(null),n=()=>{let e=Te.useContext(Qt);if(!e)throw new Error("useMedusa must be used within a MedusaProvider");return e},qo=({queryClientProviderProps:e,baseUrl:t,apiKey:s,publishableApiKey:r,children:o})=>{let m=new Ls({baseUrl:t,maxRetries:0,apiKey:s,publishableApiKey:r});return Te.createElement(bs,{...e},Te.createElement(Qt.Provider,{value:{client:m}},o))};import Je,{useContext as ws,useEffect as Fs}from"react";var De=e=>e instanceof Object,Ve=e=>Array.isArray(e),me=e=>e==null||De(e)&&Object.keys(e).length===0||Ve(e)&&e.length===0||typeof e=="string"&&e.trim().length===0;var ho=({variant:e,region:t,includeTaxes:s=!0,...r})=>{let o=Gs({variant:e,region:t,includeTaxes:s});return Tt({amount:o,currency_code:t?.currency_code,...r})},Gs=({variant:e,region:t,includeTaxes:s=!0})=>{let r=ke(e,t);return ht({amount:r,region:t,includeTaxes:s})},ke=(e,t)=>e?.prices?.find(r=>r.currency_code.toLowerCase()===t?.currency_code?.toLowerCase())?.amount||0,ht=({amount:e,region:t,includeTaxes:s=!0})=>{let r=Ns(e,t),o=s?Ys(t):0;return r*(1+o)},To=({amount:e,region:t,includeTaxes:s=!0,...r})=>{let o=ht({amount:e,region:t,includeTaxes:s});return Tt({amount:o,currency_code:t.currency_code,...r})},Ws=["krw","jpy","vnd"],Ns=(e,t)=>{let s=Ws.includes(t?.currency_code?.toLowerCase())?1:100;return Math.floor(e)/s},Ys=e=>e&&!me(e)?e?.tax_rate/100:0,Tt=({amount:e,currency_code:t,minimumFractionDigits:s,maximumFractionDigits:r,locale:o="en-US"})=>t&&!me(t)?new Intl.NumberFormat(o,{style:"currency",currency:t,minimumFractionDigits:s,maximumFractionDigits:r}).format(e):e.toString();var a=e=>{let t={all:[e],lists:()=>[...t.all,"list"],list:s=>[...t.lists(),{query:s}],details:()=>[...t.all,"detail"],detail:s=>[...t.details(),s]};return t};import*as Dt from"react";var vt=(e,t)=>{let[s,r]=Dt.useState(()=>{try{return typeof window<"u"&&window.localStorage.getItem(e)||t}catch{return t}});return[s,S=>{r(S),typeof window<"u"&&window.localStorage.setItem(e,S)},()=>{typeof window<"u"&&window.localStorage.removeItem(e)}]};var _t=Je.createContext(null);var Bs=(e,t)=>{switch(t.type){case 0:return e;case 6:return ge({...e,region:t.payload},e.items);case 1:{let s=e.items.findIndex(o=>o.variant.id===t.payload?.variant?.id);s!==-1&&e.items.splice(s,1);let r=[...e.items,t.payload];return ge(e,r)}case 4:{let s=e.items.map(r=>r.variant.id===t.payload.id?{...r,...t.payload.item}:r);return ge(e,s)}case 3:{let s=e.items.filter(r=>r.variant.id!==t.payload.id);return ge(e,s)}case 2:return ge(e,t.payload);case 5:return{...e,items:[],total:0,totalItems:0};default:return e}},ge=(e,t)=>{let s=Vs(e.region,t);return{...e,items:s,totalItems:t.reduce((r,o)=>r+o.quantity,0),total:ks(s)}},Vs=(e,t)=>t.map(s=>({...s,total:ke(s.variant,e)})),ks=e=>e.reduce((t,s)=>t+s.quantity*(s.total||0),0),Js={region:{},items:[],total:0,totalItems:0},wo=({initialState:e=Js,children:t})=>{let[s,r]=vt("medusa-session-cart",JSON.stringify(e)),[o,m]=Je.useReducer(Bs,JSON.parse(s));Fs(()=>{r(JSON.stringify(o))},[o,r]);let S=u=>{if(!De(u)||me(u))throw new Error("region must be a non-empty object");m({type:6,payload:u})},ae=u=>o.items.find(A=>A.variant.id===u),Ne=u=>{if(!Ve(u))throw new Error("items must be an array of items");m({type:2,payload:u})},Ye=u=>{if(!De(u)||me(u))throw new Error("item must be a non-empty object");m({type:1,payload:u})},we=(u,A)=>{m({type:4,payload:{id:u,item:A}})},C=(u,A)=>{let Be=ae(u);!Be||(A=A<=0?1:A,m({type:4,payload:{id:u,item:{...Be,quantity:Math.min(Be.variant.inventory_quantity,A)}}}))},Fe=u=>{let A=ae(u);!A||m({type:4,payload:{id:u,item:{...A,quantity:Math.min(A.variant.inventory_quantity,A.quantity+1)}}})},vs=u=>{let A=ae(u);!A||m({type:4,payload:{id:u,item:{...A,quantity:Math.max(0,A.quantity-1)}}})},_s=u=>{m({type:3,payload:{id:u}})},Is=()=>{m({type:5})};return Je.createElement(_t.Provider,{value:{...o,setRegion:S,addItem:Ye,updateItem:we,updateItemQuantity:C,incrementItemQuantity:Fe,decrementItemQuantity:vs,removeItem:_s,getItem:ae,setItems:Ne,clearItems:Is}},t)},Fo=()=>{let e=ws(_t);if(!e)throw new Error("useSessionCart should be used as a child of SessionCartProvider");return e};import $e,{useState as xr}from"react";import{useQuery as js}from"@tanstack/react-query";var zs="carts",Hs=a(zs),jo=(e,t)=>{let{client:s}=n(),{data:r,...o}=js(Hs.detail(e),()=>s.carts.retrieve(e),t);return{...r,...o}};import{useMutation as I}from"@tanstack/react-query";var It=e=>{let{client:t}=n();return I(s=>t.carts.create(s),e)},Lt=(e,t)=>{let{client:s}=n();return I(r=>s.carts.update(e,r),t)},bt=(e,t)=>{let{client:s}=n();return I(()=>s.carts.complete(e),t)},Gt=(e,t)=>{let{client:s}=n();return I(()=>s.carts.createPaymentSessions(e),t)},Zo=(e,t)=>{let{client:s}=n();return I(({data:r,provider_id:o})=>s.carts.updatePaymentSession(e,o,{data:r}),t)},en=(e,t)=>{let{client:s}=n();return I(({provider_id:r})=>s.carts.refreshPaymentSession(e,r),t)},Wt=(e,t)=>{let{client:s}=n();return I(r=>s.carts.setPaymentSession(e,r),t)},Nt=(e,t)=>{let{client:s}=n();return I(r=>s.carts.addShippingMethod(e,r),t)},tn=(e,t)=>{let{client:s}=n();return I(({provider_id:r})=>s.carts.deletePaymentSession(e,r),t)},sn=e=>{let{client:t}=n();return I(async r=>{let{cart:o}=await t.carts.create(r);return(await t.carts.createPaymentSessions(o.id)).cart},e)};import{useQuery as Yt}from"@tanstack/react-query";var Xs="collections",wt=a(Xs),un=(e,t)=>{let{client:s}=n(),{data:r,...o}=Yt(wt.detail(e),()=>s.collections.retrieve(e),t);return{...r,...o}},cn=(e,t)=>{let{client:s}=n(),{data:r,...o}=Yt(wt.list(e),()=>s.collections.list(e),t);return{...r,...o}};import{useQuery as Ft}from"@tanstack/react-query";var $s="customers",je={...a($s),orders:e=>[...je.detail(e),"orders"]},Cn=e=>{let{client:t}=n(),{data:s,...r}=Ft(je.detail("me"),()=>t.customers.retrieve(),e);return{...s,...r}},On=(e={limit:10,offset:0},t)=>{let{client:s}=n(),{data:r,...o}=Ft(je.orders("me"),()=>s.customers.listOrders(e),t);return{...r,...o}};import{useMutation as Bt}from"@tanstack/react-query";var Un=e=>{let{client:t}=n();return Bt(s=>t.customers.create(s),e)},qn=e=>{let{client:t}=n();return Bt(({id:s,...r})=>t.customers.update(r),e)};import{useQuery as Zs}from"@tanstack/react-query";var er="gift_cards",tr=a(er),_n=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zs(tr.detail(e),()=>s.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as ze}from"@tanstack/react-query";var Yn=(e,t)=>{let{client:s}=n();return ze(r=>s.carts.lineItems.create(e,r),t)},wn=(e,t)=>{let{client:s}=n();return ze(({lineId:r,...o})=>s.carts.lineItems.update(e,r,o),t)},Fn=(e,t)=>{let{client:s}=n();return ze(({lineId:r})=>s.carts.lineItems.delete(e,r),t)};import{useQuery as sr}from"@tanstack/react-query";var rr="orderEdit",pe=a(rr),Hn=(e,t)=>{let{client:s}=n(),{data:r,...o}=sr(pe.detail(e),()=>s.orderEdits.retrieve(e),t);return{...r,...o}};import{useMutation as Vt,useQueryClient as kt}from"@tanstack/react-query";var i=(e,t,s)=>({...s,onSuccess:(...r)=>{if(s?.onSuccess)return s.onSuccess(...r);t!==void 0&&t.forEach(o=>{e.invalidateQueries({queryKey:o})})}});var oi=(e,t)=>{let{client:s}=n(),r=kt();return Vt(o=>s.orderEdits.decline(e,o),i(r,[pe.lists(),pe.detail(e)],t))},ni=(e,t)=>{let{client:s}=n(),r=kt();return Vt(()=>s.orderEdits.complete(e),i(r,[pe.lists(),pe.detail(e)],t))};import{useQuery as He}from"@tanstack/react-query";var or="orders",Z={...a(or),cart:e=>[...Z.details(),"cart",e]},li=(e,t)=>{let{client:s}=n(),{data:r,...o}=He(Z.detail(e),()=>s.orders.retrieve(e),t);return{...r,...o}},Ri=(e,t)=>{let{client:s}=n(),{data:r,...o}=He(Z.cart(e),()=>s.orders.retrieveByCartId(e),t);return{...r,...o}},yi=(e,t)=>{let{client:s}=n(),{data:r,...o}=He(Z.list(e),()=>s.orders.lookupOrder(e),t);return{...r,...o}};import{useMutation as Jt,useQueryClient as jt}from"@tanstack/react-query";var xi=e=>{let{client:t}=n(),s=jt();return Jt(r=>t.orders.requestCustomerOrders(r),i(s,[Z.all],e))},Ei=e=>{let{client:t}=n(),s=jt();return Jt(r=>t.orders.confirmRequest(r),i(s,[Z.all],e))};import{useQuery as nr}from"@tanstack/react-query";var ir="paymentCollection",U=a(ir),Ti=(e,t)=>{let{client:s}=n(),{data:r,...o}=nr(U.detail(e),()=>s.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as xe,useQueryClient as Ee}from"@tanstack/react-query";var Gi=(e,t)=>{let{client:s}=n(),r=Ee();return xe(o=>s.paymentCollections.managePaymentSessionsBatch(e,o),i(r,[U.lists(),U.detail(e)],t))},Wi=(e,t)=>{let{client:s}=n(),r=Ee();return xe(o=>s.paymentCollections.managePaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))},Ni=(e,t)=>{let{client:s}=n(),r=Ee();return xe(o=>s.paymentCollections.authorizePaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))},Yi=(e,t)=>{let{client:s}=n(),r=Ee();return xe(o=>s.paymentCollections.authorizePaymentSessionsBatch(e,o),i(r,[U.lists(),U.detail(e)],t))},wi=(e,t)=>{let{client:s}=n(),r=Ee();return xe(o=>s.paymentCollections.refreshPaymentSession(e,o),i(r,[U.lists(),U.detail(e)],t))};import{useQuery as zt}from"@tanstack/react-query";var ar="product_categories",Ht=a(ar),Hi=(e,t)=>{let{client:s}=n(),{data:r,...o}=zt(Ht.list(e),()=>s.productCategories.list(e),t);return{...r,...o}},Xi=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=zt(Ht.detail(e),()=>r.productCategories.retrieve(e,t),s);return{...o,...m}};import{useQuery as mr}from"@tanstack/react-query";var pr="product_tags",dr=a(pr),oa=(e,t)=>{let{client:s}=n(),{data:r,...o}=mr(dr.list(e),()=>s.productTags.list(e),t);return{...r,...o}};import{useQuery as ur}from"@tanstack/react-query";var cr="product_types",lr=a(cr),ua=(e,t)=>{let{client:s}=n(),{data:r,...o}=ur(lr.list(e),()=>s.productTypes.list(e),t);return{...r,...o}};import{useQuery as Xt}from"@tanstack/react-query";var Rr="products",$t=a(Rr),Pa=(e,t)=>{let{client:s}=n(),{data:r,...o}=Xt($t.list(e),()=>s.products.list(e),t);return{...r,...o}},Ca=(e,t)=>{let{client:s}=n(),{data:r,...o}=Xt($t.detail(e),()=>s.products.retrieve(e),t);return{...r,...o}};import{useQuery as Zt}from"@tanstack/react-query";var yr="regions",es=a(yr),qa=e=>{let{client:t}=n(),{data:s,...r}=Zt(es.lists(),()=>t.regions.list(),e);return{...s,...r}},Ma=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zt(es.detail(e),()=>s.regions.retrieve(e),t);return{...r,...o}};import{useQuery as ts}from"@tanstack/react-query";var Ar="return_reasons",ss=a(Ar),_a=e=>{let{client:t}=n(),{data:s,...r}=ts(ss.lists(),()=>t.returnReasons.list(),e);return{...s,...r}},Ia=(e,t)=>{let{client:s}=n(),{data:r,...o}=ts(ss.detail(e),()=>s.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as fr}from"@tanstack/react-query";var wa=e=>{let{client:t}=n();return fr(s=>t.returns.create(s),e)};import{useQuery as rs}from"@tanstack/react-query";var Pr="shipping_options",Xe={...a(Pr),cart:e=>[...Xe.all,"cart",e]},za=(e,t)=>{let{client:s}=n(),{data:r,...o}=rs(Xe.list(e),async()=>s.shippingOptions.list(e),t);return{...r,...o}},Ha=(e,t)=>{let{client:s}=n(),{data:r,...o}=rs(Xe.cart(e),async()=>s.shippingOptions.listCartOptions(e),t);return{...r,...o}};import{useQuery as Cr}from"@tanstack/react-query";var Or="swaps",os={...a(Or),cart:e=>[...os.all,"cart",e]},rm=(e,t)=>{let{client:s}=n(),{data:r,...o}=Cr(os.cart(e),()=>s.swaps.retrieveByCartId(e),t);return{...r,...o}};import{useMutation as gr}from"@tanstack/react-query";var mm=e=>{let{client:t}=n();return gr(s=>t.swaps.create(s),e)};var ns=$e.createContext(null),vm=()=>{let e=$e.useContext(ns);if(!e)throw new Error("useCart must be used within a CartProvider");return e},Er={id:"",items:[]},_m=({children:e,initialState:t=Er})=>{let[s,r]=xr(t),o=It({onSuccess:({cart:C})=>r(C)}),m=Lt(s?.id,{onSuccess:({cart:C})=>r(C)}),S=Nt(s?.id,{onSuccess:({cart:C})=>r(C)}),ae=Gt(s?.id,{onSuccess:({cart:C})=>r(C)}),Ne=Wt(s?.id,{onSuccess:({cart:C})=>{r(C)}}),Ye=bt(s?.id),we=s?.items.map(C=>C.quantity).reduce((C,Fe)=>C+Fe,0);return $e.createElement(ns.Provider,{value:{cart:s,setCart:r,createCart:o,pay:Ne,startCheckout:ae,completeCheckout:Ye,updateCart:m,addShippingMethod:S,totalItems:we||0}},e)};import{useQuery as Sr}from"@tanstack/react-query";var Ur="admin_auth",ve=a(Ur),Fm=e=>{let{client:t}=n(),{data:s,...r}=Sr(ve.details(),()=>t.admin.auth.getSession(),e);return{...s,...r}};import{useMutation as is,useQueryClient as as}from"@tanstack/react-query";var Hm=e=>{let{client:t}=n(),s=as();return is(r=>t.admin.auth.createSession(r),i(s,ve.details(),e))},Xm=e=>{let{client:t}=n(),s=as();return is(()=>t.admin.auth.deleteSession(),i(s,ve.details(),e))};import{useQuery as ms}from"@tanstack/react-query";var qr="admin_batches",B=a(qr),np=(e,t)=>{let{client:s}=n(),{data:r,...o}=ms(B.list(e),()=>s.admin.batchJobs.list(e),t);return{...r,...o}},ip=(e,t)=>{let{client:s}=n(),{data:r,...o}=ms(B.detail(e),()=>s.admin.batchJobs.retrieve(e),t);return{...r,...o}};import{useMutation as Ze,useQueryClient as et}from"@tanstack/react-query";var lp=e=>{let{client:t}=n(),s=et();return Ze(r=>t.admin.batchJobs.create(r),i(s,B.lists(),e))},Rp=(e,t)=>{let{client:s}=n(),r=et();return Ze(()=>s.admin.batchJobs.cancel(e),i(r,[B.lists(),B.detail(e)],t))},yp=(e,t)=>{let{client:s}=n(),r=et();return Ze(()=>s.admin.batchJobs.confirm(e),i(r,[B.lists(),B.detail(e)],t))};import{useMutation as de,useQueryClient as ue}from"@tanstack/react-query";import{useQuery as tt}from"@tanstack/react-query";var Mr="admin_products",d=a(Mr),Ep=(e,t)=>{let{client:s}=n(),{data:r,...o}=tt(d.list(e),()=>s.admin.products.list(e),t);return{...r,...o}},Sp=(e,t)=>{let{client:s}=n(),{data:r,...o}=tt(d.detail(e),()=>s.admin.products.retrieve(e),t);return{...r,...o}},Up=e=>{let{client:t}=n(),{data:s,...r}=tt(d.detail("tags"),()=>t.admin.products.listTags(),e);return{...s,...r}};import{useMutation as G,useQueryClient as W}from"@tanstack/react-query";var Dp=e=>{let{client:t}=n(),s=W();return G(r=>t.admin.products.create(r),i(s,d.lists(),e))},vp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.update(e,o),i(r,[d.lists(),d.detail(e)],t))},_p=(e,t)=>{let{client:s}=n(),r=W();return G(()=>s.admin.products.delete(e),i(r,[d.lists(),d.detail(e)],t))},Ip=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.createVariant(e,o),i(r,[d.lists(),d.detail(e)],t))},Lp=(e,t)=>{let{client:s}=n(),r=W();return G(({variant_id:o,...m})=>s.admin.products.updateVariant(e,o,m),i(r,[d.lists(),d.detail(e)],t))},bp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.deleteVariant(e,o),i(r,[d.lists(),d.detail(e)],t))},Gp=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.addOption(e,o),i(r,d.detail(e),t))},Wp=(e,t)=>{let{client:s}=n(),r=W();return G(({option_id:o,...m})=>s.admin.products.updateOption(e,o,m),i(r,d.detail(e),t))},Np=(e,t)=>{let{client:s}=n(),r=W();return G(o=>s.admin.products.deleteOption(e,o),i(r,d.detail(e),t))};import{useQuery as st}from"@tanstack/react-query";var Kr="admin_variants",f=a(Kr),jp=(e,t)=>{let{client:s}=n(),{data:r,...o}=st(f.list(e),()=>s.admin.variants.list(e),t);return{...r,...o}},zp=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=st(f.detail(e),()=>r.admin.variants.retrieve(e,t),s);return{...o,...m}},Hp=(e,t)=>{let{client:s}=n(),{data:r,...o}=st(f.detail(e),()=>s.admin.variants.getInventory(e),t);return{...r,...o}};import{useQuery as ps}from"@tanstack/react-query";var Qr="admin_orders",p={...a(Qr),detailOrder(e,t){return[...this.detail(e),{...t||{}}]}},rd=(e,t)=>{let{client:s}=n(),{data:r,...o}=ps(p.list(e),()=>s.admin.orders.list(e),t);return{...r,...o}},od=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ps(p.detailOrder(e,t),()=>r.admin.orders.retrieve(e,t),s);return{...o,...m}};var ld=(e,t)=>{let{client:s}=n(),r=ue();return de(o=>s.admin.orders.createClaim(e,o),i(r,p.detail(e),t))},Rd=(e,t)=>{let{client:s}=n(),r=ue();return de(({claim_id:o,...m})=>s.admin.orders.updateClaim(e,o,m),i(r,p.detail(e),t))},yd=(e,t)=>{let{client:s}=n(),r=ue();return de(o=>s.admin.orders.cancelClaim(e,o),i(r,p.detail(e),t))},Ad=(e,t)=>{let{client:s}=n(),r=ue();return de(({claim_id:o,...m})=>s.admin.orders.fulfillClaim(e,o,m),i(r,[p.detail(e),f.all,d.lists()],t))},fd=(e,t)=>{let{client:s}=n(),r=ue();return de(({claim_id:o,fulfillment_id:m})=>s.admin.orders.cancelClaimFulfillment(e,o,m),i(r,p.detail(e),t))},Pd=(e,t)=>{let{client:s}=n(),r=ue();return de(({claim_id:o,...m})=>s.admin.orders.createClaimShipment(e,o,m),i(r,p.detail(e),t))};import{useQuery as ds}from"@tanstack/react-query";var hr="admin_collections",q=a(hr),Ud=(e,t)=>{let{client:s}=n(),{data:r,...o}=ds(q.list(e),()=>s.admin.collections.list(e),t);return{...r,...o}},qd=(e,t)=>{let{client:s}=n(),{data:r,...o}=ds(q.detail(e),()=>s.admin.collections.retrieve(e),t);return{...r,...o}};import{useMutation as Se,useQueryClient as Ue}from"@tanstack/react-query";var vd=e=>{let{client:t}=n(),s=Ue();return Se(r=>t.admin.collections.create(r),i(s,q.lists(),e))},_d=(e,t)=>{let{client:s}=n(),r=Ue();return Se(o=>s.admin.collections.update(e,o),i(r,[q.lists(),q.detail(e)],t))},Id=(e,t)=>{let{client:s}=n(),r=Ue();return Se(()=>s.admin.collections.delete(e),i(r,[q.lists(),q.detail(e)],t))},Ld=(e,t)=>{let{client:s}=n(),r=Ue();return Se(o=>s.admin.collections.addProducts(e,o),i(r,[q.lists(),q.detail(e)],t))},bd=(e,t)=>{let{client:s}=n(),r=Ue();return Se(o=>s.admin.collections.removeProducts(e,o),i(r,[q.lists(),q.detail(e)],t))};import{useMutation as vr,useQueryClient as _r}from"@tanstack/react-query";import{useQuery as Tr}from"@tanstack/react-query";var Dr="admin_currencies",_e=a(Dr),Vd=(e,t)=>{let{client:s}=n(),{data:r,...o}=Tr(_e.list(e),()=>s.admin.currencies.list(e),t);return{...r,...o}};var $d=(e,t)=>{let{client:s}=n(),r=_r();return vr(o=>s.admin.currencies.update(e,o),i(r,[_e.lists(),_e.detail(e)],t))};import{useQuery as rt}from"@tanstack/react-query";var Ir="admin_customer_groups",x={...a(Ir),detailCustomer(e,t){return[...this.detail(e),"customers",{...t||{}}]}},iu=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=rt(x.detail(e),()=>r.admin.customerGroups.retrieve(e,t),s);return{...o,...m}},au=(e,t)=>{let{client:s}=n(),{data:r,...o}=rt(x.list(e),()=>s.admin.customerGroups.list(e),t);return{...r,...o}},mu=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=rt(x.detailCustomer(e,t),()=>r.admin.customerGroups.listCustomers(e,t),s);return{...o,...m}};import{useMutation as qe,useQueryClient as Me}from"@tanstack/react-query";var yu=e=>{let{client:t}=n(),s=Me();return qe(r=>t.admin.customerGroups.create(r),i(s,x.lists(),e))},Au=(e,t)=>{let{client:s}=n(),r=Me();return qe(o=>s.admin.customerGroups.update(e,o),i(r,[x.lists(),x.detail(e)],t))},fu=(e,t)=>{let{client:s}=n(),r=Me();return qe(()=>s.admin.customerGroups.delete(e),i(r,[x.lists(),x.detail(e)],t))},Pu=(e,t)=>{let{client:s}=n(),r=Me();return qe(o=>s.admin.customerGroups.addCustomers(e,o),i(r,[x.lists(),x.detailCustomer(e)],t))},Cu=(e,t)=>{let{client:s}=n(),r=Me();return qe(o=>s.admin.customerGroups.removeCustomers(e,o),i(r,[x.lists(),x.detailCustomer(e)],t))};import{useQuery as us}from"@tanstack/react-query";var Lr="admin_customers",M=a(Lr),Mu=(e,t)=>{let{client:s}=n(),{data:r,...o}=us(M.list(e),()=>s.admin.customers.list(e),t);return{...r,...o}},Ku=(e,t)=>{let{client:s}=n(),{data:r,...o}=us(M.detail(e),()=>s.admin.customers.retrieve(e),t);return{...r,...o}};import{useMutation as cs,useQueryClient as ls}from"@tanstack/react-query";var Iu=e=>{let{client:t}=n(),s=ls();return cs(r=>t.admin.customers.create(r),i(s,M.lists(),e))},Lu=(e,t)=>{let{client:s}=n(),r=ls();return cs(o=>s.admin.customers.update(e,o),i(r,[M.lists(),M.detail(e)],t))};import{useQuery as Ie}from"@tanstack/react-query";var br="admin_discounts",R={...a(br),detailCondition(e,t){return[...this.detail(e),"condition",{...t||{}}]}},Bu=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ie(R.list(e),()=>s.admin.discounts.list(e),t);return{...r,...o}},Vu=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ie(R.detail(e),()=>r.admin.discounts.retrieve(e,t),s);return{...o,...m}},ku=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ie(R.detail(e),()=>s.admin.discounts.retrieveByCode(e),t);return{...r,...o}},Ju=(e,t,s,r)=>{let{client:o}=n(),{data:m,...S}=Ie(R.detailCondition(t),()=>o.admin.discounts.getCondition(e,t,s),r);return{...m,...S}};import{useMutation as K,useQueryClient as Q}from"@tanstack/react-query";var ec=(e,t,s,r)=>{let{client:o}=n(),m=Q();return K(S=>o.admin.discounts.addConditionResourceBatch(e,t,S,s),i(m,R.detail(e),r))},tc=(e,t,s)=>{let{client:r}=n(),o=Q();return K(m=>r.admin.discounts.deleteConditionResourceBatch(e,t,m),i(o,[R.detail(e)],s))},sc=e=>{let{client:t}=n(),s=Q();return K(r=>t.admin.discounts.create(r),i(s,R.lists(),e))},rc=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.update(e,o),i(r,R.detail(e),t))},oc=(e,t)=>{let{client:s}=n(),r=Q();return K(()=>s.admin.discounts.delete(e),i(r,R.lists(),t))},nc=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.addRegion(e,o),i(r,R.detail(e),t))},ic=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.removeRegion(e,o),i(r,R.detail(e),t))},ac=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.createDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},mc=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.deleteDynamicCode(e,o),i(r,[R.lists(),R.detail(e)],t))},pc=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.createCondition(e,o),i(r,R.detail(e),t))},dc=(e,t,s)=>{let{client:r}=n(),o=Q();return K(m=>r.admin.discounts.updateCondition(e,t,m),i(o,R.detail(e),s))},uc=(e,t)=>{let{client:s}=n(),r=Q();return K(o=>s.admin.discounts.deleteCondition(e,o),i(r,R.detail(e),t))};import{useQuery as Rs}from"@tanstack/react-query";var Gr="admin_draft_orders",h=a(Gr),Cc=(e,t)=>{let{client:s}=n(),{data:r,...o}=Rs(h.list(e),()=>s.admin.draftOrders.list(e),t);return{...r,...o}},Oc=(e,t)=>{let{client:s}=n(),{data:r,...o}=Rs(h.detail(e),()=>s.admin.draftOrders.retrieve(e),t);return{...r,...o}};import{useMutation as ee,useQueryClient as te}from"@tanstack/react-query";var Mc=e=>{let{client:t}=n(),s=te();return ee(r=>t.admin.draftOrders.create(r),i(s,h.lists(),e))},Kc=(e,t)=>{let{client:s}=n(),r=te();return ee(o=>s.admin.draftOrders.update(e,o),i(r,[h.detail(e),h.lists()],t))},Qc=(e,t)=>{let{client:s}=n(),r=te();return ee(()=>s.admin.draftOrders.delete(e),i(r,[h.detail(e),h.lists()],t))},hc=(e,t)=>{let{client:s}=n(),r=te();return ee(()=>s.admin.draftOrders.markPaid(e),i(r,h.detail(e),t))},Tc=(e,t)=>{let{client:s}=n(),r=te();return ee(o=>s.admin.draftOrders.addLineItem(e,o),i(r,h.detail(e),t))},Dc=(e,t)=>{let{client:s}=n(),r=te();return ee(o=>s.admin.draftOrders.removeLineItem(e,o),i(r,h.detail(e),t))},vc=(e,t)=>{let{client:s}=n(),r=te();return ee(({item_id:o,...m})=>s.admin.draftOrders.updateLineItem(e,o,m),i(r,h.detail(e),t))};import{useQuery as ys}from"@tanstack/react-query";var Wr="admin_gift_cards",V=a(Wr),Yc=(e,t)=>{let{client:s}=n(),{data:r,...o}=ys(V.list(e),()=>s.admin.giftCards.list(e),t);return{...r,...o}},wc=(e,t)=>{let{client:s}=n(),{data:r,...o}=ys(V.detail(e),()=>s.admin.giftCards.retrieve(e),t);return{...r,...o}};import{useMutation as ot,useQueryClient as nt}from"@tanstack/react-query";var zc=e=>{let{client:t}=n(),s=nt();return ot(r=>t.admin.giftCards.create(r),i(s,V.lists(),e))},Hc=(e,t)=>{let{client:s}=n(),r=nt();return ot(o=>s.admin.giftCards.update(e,o),i(r,[V.lists(),V.detail(e)],t))},Xc=(e,t)=>{let{client:s}=n(),r=nt();return ot(()=>s.admin.giftCards.delete(e),i(r,[V.lists(),V.detail(e)],t))};import{useQuery as it}from"@tanstack/react-query";var Nr="admin_inventory_items",E=a(Nr),nl=(e,t)=>{let{client:s}=n(),{data:r,...o}=it(E.list(e),()=>s.admin.inventoryItems.list(e),{...t});return{...r,...o}},il=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=it(E.detail(e),()=>r.admin.inventoryItems.retrieve(e,t),{...s});return{...o,...m}},al=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=it(E.detail(e),()=>r.admin.inventoryItems.listLocationLevels(e,t),{...s});return{...o,...m}};import{useMutation as ce,useQueryClient as le}from"@tanstack/react-query";var Rl=e=>{let{client:t}=n(),s=le();return ce((r,o)=>t.admin.inventoryItems.create(r,o),i(s,[E.lists()],e))},yl=(e,t)=>{let{client:s}=n(),r=le();return ce(o=>s.admin.inventoryItems.update(e,o),i(r,[E.detail(e)],t))},Al=(e,t)=>{let{client:s}=n(),r=le();return ce(()=>s.admin.inventoryItems.delete(e),i(r,[E.detail(e)],t))},fl=(e,t)=>{let{client:s}=n(),r=le();return ce(o=>s.admin.inventoryItems.updateLocationLevel(e,o.stockLocationId,{incoming_quantity:o.incoming_quantity,stocked_quantity:o.stocked_quantity}),i(r,[E.detail(e),E.lists()],t))},Pl=(e,t)=>{let{client:s}=n(),r=le();return ce(o=>s.admin.inventoryItems.deleteLocationLevel(e,o),i(r,[E.detail(e),E.lists()],t))},Cl=(e,t)=>{let{client:s}=n(),r=le();return ce(o=>s.admin.inventoryItems.createLocationLevel(e,o),i(r,[E.detail(e),E.lists()],t))};import{useQuery as Yr}from"@tanstack/react-query";var wr="admin_invites",Re=a(wr),Ml=e=>{let{client:t}=n(),{data:s,...r}=Yr(Re.lists(),()=>t.admin.invites.list(),e);return{...s,...r}};import{useMutation as Le,useQueryClient as at}from"@tanstack/react-query";var _l=e=>{let{client:t}=n(),s=at();return Le(r=>t.admin.invites.accept(r),i(s,Re.lists(),e))},Il=(e,t)=>{let{client:s}=n();return Le(()=>s.admin.invites.resend(e),t)},Ll=e=>{let{client:t}=n(),s=at();return Le(r=>t.admin.invites.create(r),i(s,Re.lists(),e))},bl=(e,t)=>{let{client:s}=n(),r=at();return Le(()=>s.admin.invites.delete(e),i(r,[Re.lists(),Re.detail(e)],t))};import{useQuery as As}from"@tanstack/react-query";var Fr="admin_notes",k=a(Fr),Vl=(e,t)=>{let{client:s}=n(),{data:r,...o}=As(k.list(e),()=>s.admin.notes.list(e),t);return{...r,...o}},kl=(e,t)=>{let{client:s}=n(),{data:r,...o}=As(k.detail(e),()=>s.admin.notes.retrieve(e),t);return{...r,...o}};import{useMutation as mt,useQueryClient as pt}from"@tanstack/react-query";var Zl=e=>{let{client:t}=n(),s=pt();return mt(r=>t.admin.notes.create(r),i(s,k.lists(),e))},eR=(e,t)=>{let{client:s}=n(),r=pt();return mt(o=>s.admin.notes.update(e,o),i(r,[k.detail(e),k.lists()],t))},tR=(e,t)=>{let{client:s}=n(),r=pt();return mt(()=>s.admin.notes.delete(e),i(r,[k.detail(e),k.lists()],t))};import{useQuery as Br}from"@tanstack/react-query";var Vr="admin_notifications",be=a(Vr),pR=(e,t)=>{let{client:s}=n(),{data:r,...o}=Br(be.list(e),()=>s.admin.notifications.list(e),t);return{...r,...o}};import{useMutation as kr,useQueryClient as Jr}from"@tanstack/react-query";var AR=(e,t)=>{let{client:s}=n(),r=Jr();return kr(o=>s.admin.notifications.resend(e,o),i(r,[be.lists(),be.detail(e)],t))};import{useMutation as D,useQueryClient as v}from"@tanstack/react-query";var KR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.update(e,o),i(r,[p.lists(),p.detail(e)],t))},QR=(e,t)=>{let{client:s}=n(),r=v();return D(()=>s.admin.orders.cancel(e),i(r,[p.lists(),p.detail(e)],t))},hR=(e,t)=>{let{client:s}=n(),r=v();return D(()=>s.admin.orders.complete(e),i(r,[p.lists(),p.detail(e)],t))},TR=(e,t)=>{let{client:s}=n(),r=v();return D(()=>s.admin.orders.capturePayment(e),i(r,[p.lists(),p.detail(e)],t))},DR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.refundPayment(e,o),i(r,[p.lists(),p.detail(e)],t))},vR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.createFulfillment(e,o),i(r,[p.lists(),p.detail(e),f.all,d.lists()],t))},_R=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.cancelFulfillment(e,o),i(r,[p.lists(),p.detail(e)],t))},IR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.createShipment(e,o),i(r,p.detail(e),t))},LR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.requestReturn(e,o),i(r,p.detail(e),t))},bR=(e,t)=>{let{client:s}=n(),r=v();return D(o=>s.admin.orders.addShippingMethod(e,o),i(r,p.detail(e),t))},GR=(e,t)=>{let{client:s}=n(),r=v();return D(()=>s.admin.orders.archive(e),i(r,[p.lists(),p.detail(e)],t))};import{useQuery as fs}from"@tanstack/react-query";var jr="admin_order_edits",c=a(jr),kR=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=fs(c.detail(e),()=>r.admin.orderEdits.retrieve(e,t),s);return{...o,...m}},JR=(e,t)=>{let{client:s}=n(),{data:r,...o}=fs(c.list(e),()=>s.admin.orderEdits.list(e),t);return{...r,...o}};import{useMutation as L,useQueryClient as b}from"@tanstack/react-query";var ty=e=>{let{client:t}=n(),s=b();return L(r=>t.admin.orderEdits.create(r),i(s,[c.lists(),p.details()],e))},sy=(e,t)=>{let{client:s}=n(),r=b();return L(()=>s.admin.orderEdits.delete(e),i(r,[c.detail(e),c.lists(),p.details()],t))},ry=(e,t,s)=>{let{client:r}=n(),o=b();return L(()=>r.admin.orderEdits.deleteItemChange(e,t),i(o,[c.detail(e),c.lists()],s))},oy=(e,t,s)=>{let{client:r}=n(),o=b();return L(m=>r.admin.orderEdits.updateLineItem(e,t,m),i(o,[c.detail(e),c.lists()],s))},ny=(e,t,s)=>{let{client:r}=n(),o=b();return L(()=>r.admin.orderEdits.removeLineItem(e,t),i(o,[c.detail(e),c.lists()],s))},iy=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.orderEdits.update(e,o),i(r,[c.lists(),c.detail(e),p.details()],t))},ay=(e,t)=>{let{client:s}=n(),r=b();return L(o=>s.admin.orderEdits.addLineItem(e,o),i(r,[c.lists(),c.detail(e)],t))},my=(e,t)=>{let{client:s}=n(),r=b();return L(()=>s.admin.orderEdits.requestConfirmation(e),i(r,[c.lists(),c.detail(e),p.details()],t))},py=(e,t)=>{let{client:s}=n(),r=b();return L(()=>s.admin.orderEdits.cancel(e),i(r,[c.lists(),c.detail(e),p.details()],t))},dy=(e,t)=>{let{client:s}=n(),r=b();return L(()=>s.admin.orderEdits.confirm(e),i(r,[c.lists(),c.detail(e),p.details()],t))};import{useQuery as dt}from"@tanstack/react-query";var zr="admin_price_lists",y={...a(zr),detailProducts(e,t){return[...this.detail(e),"products",{...t||{}}]}},Py=(e,t)=>{let{client:s}=n(),{data:r,...o}=dt(y.list(e),()=>s.admin.priceLists.list(e),t);return{...r,...o}},Cy=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=dt(y.detailProducts(e,t),()=>r.admin.priceLists.listProducts(e,t),s);return{...o,...m}},Oy=(e,t)=>{let{client:s}=n(),{data:r,...o}=dt(y.detail(e),()=>s.admin.priceLists.retrieve(e),t);return{...r,...o}};import{useMutation as se,useQueryClient as re}from"@tanstack/react-query";var Qy=e=>{let{client:t}=n(),s=re();return se(r=>t.admin.priceLists.create(r),i(s,y.lists(),e))},hy=(e,t)=>{let{client:s}=n(),r=re();return se(o=>s.admin.priceLists.update(e,o),i(r,[y.detail(e),y.lists(),y.detailProducts(e)],t))},Ty=(e,t)=>{let{client:s}=n(),r=re();return se(()=>s.admin.priceLists.delete(e),i(r,[y.detail(e),y.lists()],t))},Dy=(e,t)=>{let{client:s}=n(),r=re();return se(o=>s.admin.priceLists.addPrices(e,o),i(r,[y.lists(),y.detailProducts(e)],t))},vy=(e,t)=>{let{client:s}=n(),r=re();return se(o=>s.admin.priceLists.deletePrices(e,o),i(r,[y.detail(e),y.lists(),y.detailProducts(e)],t))},_y=(e,t,s)=>{let{client:r}=n(),o=re();return se(()=>r.admin.priceLists.deleteProductPrices(e,t),i(o,[y.detail(e),y.lists(),d.detail(t)],s))},Iy=(e,t,s)=>{let{client:r}=n(),o=re();return se(()=>r.admin.priceLists.deleteVariantPrices(e,t),i(o,[y.detail(e),y.lists(),f.detail(t)],s))};import{useQuery as Hr}from"@tanstack/react-query";var Xr="admin_product_tags",$r=a(Xr),Fy=(e,t)=>{let{client:s}=n(),{data:r,...o}=Hr($r.list(e),()=>s.admin.productTags.list(e),t);return{...r,...o}};import{useQuery as Zr}from"@tanstack/react-query";var eo="admin_product_types",to=a(eo),Hy=(e,t)=>{let{client:s}=n(),{data:r,...o}=Zr(to.list(e),()=>s.admin.productTypes.list(e),t);return{...r,...o}};import{useQuery as Ps}from"@tanstack/react-query";var so="product_categories",T=a(so),rA=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ps(T.list(e),()=>s.admin.productCategories.list(e),t);return{...r,...o}},oA=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ps(T.detail(e),()=>r.admin.productCategories.retrieve(e,t),s);return{...o,...m}};import{useMutation as Ke,useQueryClient as Qe}from"@tanstack/react-query";var cA=e=>{let{client:t}=n(),s=Qe();return Ke(r=>t.admin.productCategories.create(r),i(s,[T.list(),d.details()],e))},lA=(e,t)=>{let{client:s}=n(),r=Qe();return Ke(o=>s.admin.productCategories.update(e,o),i(r,[T.lists(),T.detail(e),d.details()],t))},RA=(e,t)=>{let{client:s}=n(),r=Qe();return Ke(()=>s.admin.productCategories.delete(e),i(r,[T.lists(),T.detail(e),d.all],t))},yA=(e,t)=>{let{client:s}=n(),r=Qe();return Ke(o=>s.admin.productCategories.addProducts(e,o),i(r,[T.lists(),T.detail(e),d.list({product_category_id:[e]})],t))},AA=(e,t)=>{let{client:s}=n(),r=Qe();return Ke(o=>s.admin.productCategories.removeProducts(e,o),i(r,[T.lists(),T.detail(e),d.list({product_category_id:[e]})],t))};import{useQuery as ut}from"@tanstack/react-query";var ro="admin_publishable_api_keys",g={...a(ro),detailSalesChannels(e,t){return[...this.detail(e),"sales_channels",{...t||{}}]}},SA=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ut(g.detail(e),()=>r.admin.publishableApiKeys.retrieve(e,t),s);return{...o,...m}},UA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ut(g.list(e),()=>s.admin.publishableApiKeys.list(e),t);return{...r,...o}},qA=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=ut(g.detailSalesChannels(e,t),()=>r.admin.publishableApiKeys.listSalesChannels(e,t),s);return{...o,...m}};import{useMutation as ye,useQueryClient as Ae}from"@tanstack/react-query";var vA=e=>{let{client:t}=n(),s=Ae();return ye(r=>t.admin.publishableApiKeys.create(r),i(s,[g.lists()],e))},_A=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.publishableApiKeys.update(e,o),i(r,[g.lists(),g.detail(e),g.details()],t))},IA=(e,t)=>{let{client:s}=n(),r=Ae();return ye(()=>s.admin.publishableApiKeys.delete(e),i(r,[g.detail(e),g.lists()],t))},LA=(e,t)=>{let{client:s}=n(),r=Ae();return ye(()=>s.admin.publishableApiKeys.revoke(e),i(r,[g.lists(),g.detail(e)],t))},bA=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.publishableApiKeys.addSalesChannelsBatch(e,o),i(r,[g.detailSalesChannels(e)],t))},GA=(e,t)=>{let{client:s}=n(),r=Ae();return ye(o=>s.admin.publishableApiKeys.deleteSalesChannelsBatch(e,o),i(r,[g.detailSalesChannels(e)],t))};import{useQuery as ct}from"@tanstack/react-query";var oo="admin_regions",O=a(oo),kA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ct(O.list(e),()=>s.admin.regions.list(e),t);return{...r,...o}},JA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ct(O.detail(e),()=>s.admin.regions.retrieve(e),t);return{...r,...o}},jA=(e,t)=>{let{client:s}=n(),{data:r,...o}=ct(O.detail(`${e}_fullfillment-options`),()=>s.admin.regions.retrieveFulfillmentOptions(e),t);return{...r,...o}};import{useMutation as N,useQueryClient as Y}from"@tanstack/react-query";var tf=e=>{let{client:t}=n(),s=Y();return N(r=>t.admin.regions.create(r),i(s,O.lists(),e))},sf=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.update(e,o),i(r,[O.lists(),O.detail(e)],t))},rf=(e,t)=>{let{client:s}=n(),r=Y();return N(()=>s.admin.regions.delete(e),i(r,[O.lists(),O.detail(e)],t))},of=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addCountry(e,o),i(r,O.detail(e),t))},nf=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deleteCountry(e,o),i(r,O.detail(e),t))},af=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addFulfillmentProvider(e,o),i(r,O.detail(e),t))},mf=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deleteFulfillmentProvider(e,o),i(r,O.detail(e),t))},pf=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.addPaymentProvider(e,o),i(r,O.detail(e),t))},df=(e,t)=>{let{client:s}=n(),r=Y();return N(o=>s.admin.regions.deletePaymentProvider(e,o),i(r,O.detail(e),t))};import{useQuery as Cs}from"@tanstack/react-query";var no="admin_return_reasons",J=a(no),Pf=e=>{let{client:t}=n(),{data:s,...r}=Cs(J.lists(),()=>t.admin.returnReasons.list(),e);return{...s,...r}},Cf=(e,t)=>{let{client:s}=n(),{data:r,...o}=Cs(J.detail(e),()=>s.admin.returnReasons.retrieve(e),t);return{...r,...o}};import{useMutation as lt,useQueryClient as Rt}from"@tanstack/react-query";var qf=e=>{let{client:t}=n(),s=Rt();return lt(r=>t.admin.returnReasons.create(r),i(s,J.lists(),e))},Mf=(e,t)=>{let{client:s}=n(),r=Rt();return lt(o=>s.admin.returnReasons.update(e,o),i(r,[J.detail(e),J.lists()],t))},Kf=(e,t)=>{let{client:s}=n(),r=Rt();return lt(()=>s.admin.returnReasons.delete(e),i(r,[J.detail(e),J.lists()],t))};import{useQuery as io}from"@tanstack/react-query";var ao="admin_returns",fe=a(ao),Lf=e=>{let{client:t}=n(),{data:s,...r}=io(fe.lists(),()=>t.admin.returns.list(),e);return{...s,...r}};import{useMutation as Os,useQueryClient as gs}from"@tanstack/react-query";var Ff=(e,t)=>{let{client:s}=n(),r=gs();return Os(o=>s.admin.returns.receive(e,o),i(r,[fe.detail(e),fe.list()],t))},Bf=(e,t)=>{let{client:s}=n(),r=gs();return Os(()=>s.admin.returns.cancel(e),i(r,[fe.detail(e),fe.list()],t))};import{useMutation as yt,useQueryClient as At}from"@tanstack/react-query";import{useQuery as xs}from"@tanstack/react-query";var mo="admin_stock_locations",j=a(mo),$f=(e,t)=>{let{client:s}=n(),{data:r,...o}=xs(j.list(e),()=>s.admin.reservations.list(e),{...t});return{...r,...o}},Zf=(e,t)=>{let{client:s}=n(),{data:r,...o}=xs(j.detail(e),()=>s.admin.reservations.retrieve(e),t);return{...r,...o}};var aP=e=>{let{client:t}=n(),s=At();return yt(r=>t.admin.reservations.create(r),i(s,[j.lists(),f.all],e))},mP=(e,t)=>{let{client:s}=n(),r=At();return yt(o=>s.admin.reservations.update(e,o),i(r,[j.lists(),j.detail(e),f.all],t))},pP=(e,t)=>{let{client:s}=n(),r=At();return yt(()=>s.admin.reservations.delete(e),i(r,[j.lists(),j.detail(e),f.all],t))};import{useQuery as Es}from"@tanstack/react-query";var po="admin_sales_channels",P=a(po),fP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Es(P.detail(e),()=>s.admin.salesChannels.retrieve(e),t);return{...r,...o}},PP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Es(P.list(e),()=>s.admin.salesChannels.list(e),t);return{...r,...o}};import{useMutation as oe,useQueryClient as ne}from"@tanstack/react-query";import{useQuery as Ss}from"@tanstack/react-query";var uo="admin_stock_locations",_=a(uo),EP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ss(_.list(e),()=>s.admin.stockLocations.list(e),t);return{...r,...o}},SP=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ss(_.detail(e),()=>s.admin.stockLocations.retrieve(e),t);return{...r,...o}};import{useMutation as ft,useQueryClient as Pt}from"@tanstack/react-query";var vP=e=>{let{client:t}=n(),s=Pt();return ft(r=>t.admin.stockLocations.create(r),i(s,[_.lists()],e))},_P=(e,t)=>{let{client:s}=n(),r=Pt();return ft(o=>s.admin.stockLocations.update(e,o),i(r,[_.lists(),_.detail(e)],t))},IP=(e,t)=>{let{client:s}=n(),r=Pt();return ft(()=>s.admin.stockLocations.delete(e),i(r,[_.lists(),_.detail(e),f.all,d.lists()],t))};var JP=e=>{let{client:t}=n(),s=ne();return oe(r=>t.admin.salesChannels.create(r),i(s,[P.list()],e))},jP=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.salesChannels.update(e,o),i(r,[P.lists(),P.detail(e)],t))},zP=(e,t)=>{let{client:s}=n(),r=ne();return oe(()=>s.admin.salesChannels.delete(e),i(r,[P.lists(),P.detail(e)],t))},HP=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.salesChannels.removeProducts(e,o),i(r,[P.lists(),P.detail(e),d.list({sales_channel_id:[e]})],t))},XP=(e,t)=>{let{client:s}=n(),r=ne();return oe(o=>s.admin.salesChannels.addProducts(e,o),i(r,[P.lists(),P.detail(e),d.list({sales_channel_id:[e]})],t))},$P=e=>{let{client:t}=n(),s=ne();return oe(({sales_channel_id:r,location_id:o})=>t.admin.salesChannels.addLocation(r,{location_id:o}),i(s,[P.lists(),P.details(),_.all],e))},ZP=e=>{let{client:t}=n(),s=ne();return oe(({sales_channel_id:r,location_id:o})=>t.admin.salesChannels.removeLocation(r,{location_id:o}),i(s,[P.lists(),P.details(),_.all],e))};import{useQuery as Us}from"@tanstack/react-query";var co="admin_shipping_options",z=a(co),aC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Us(z.list(e),()=>s.admin.shippingOptions.list(e),t);return{...r,...o}},mC=(e,t)=>{let{client:s}=n(),{data:r,...o}=Us(z.detail(e),()=>s.admin.shippingOptions.retrieve(e),t);return{...r,...o}};import{useMutation as Ct,useQueryClient as Ot}from"@tanstack/react-query";var yC=e=>{let{client:t}=n(),s=Ot();return Ct(r=>t.admin.shippingOptions.create(r),i(s,z.lists(),e))},AC=(e,t)=>{let{client:s}=n(),r=Ot();return Ct(o=>s.admin.shippingOptions.update(e,o),i(r,[z.lists(),z.detail(e)],t))},fC=(e,t)=>{let{client:s}=n(),r=Ot();return Ct(()=>s.admin.shippingOptions.delete(e),i(r,[z.lists(),z.detail(e)],t))};import{useQuery as qs}from"@tanstack/react-query";var lo="admin_shippingProfiles",H=a(lo),UC=e=>{let{client:t}=n(),{data:s,...r}=qs(H.lists(),()=>t.admin.shippingProfiles.list(),e);return{...s,...r}},qC=(e,t)=>{let{client:s}=n(),{data:r,...o}=qs(H.detail(e),()=>s.admin.shippingProfiles.retrieve(e),t);return{...r,...o}};import{useMutation as gt,useQueryClient as xt}from"@tanstack/react-query";var vC=e=>{let{client:t}=n(),s=xt();return gt(r=>t.admin.shippingProfiles.create(r),i(s,H.lists(),e))},_C=(e,t)=>{let{client:s}=n(),r=xt();return gt(o=>s.admin.shippingProfiles.update(e,o),i(r,[H.lists(),H.detail(e)],t))},IC=(e,t)=>{let{client:s}=n(),r=xt();return gt(()=>s.admin.shippingProfiles.delete(e),i(r,[H.lists(),H.detail(e)],t))};import{useQuery as Et}from"@tanstack/react-query";var Ro="admin_store",ie=a(Ro),FC=e=>{let{client:t}=n(),{data:s,...r}=Et(ie.detail("payment_providers"),()=>t.admin.store.listPaymentProviders(),e);return{...s,...r}},BC=e=>{let{client:t}=n(),{data:s,...r}=Et(ie.detail("tax_providers"),()=>t.admin.store.listTaxProviders(),e);return{...s,...r}},VC=e=>{let{client:t}=n(),{data:s,...r}=Et(ie.details(),()=>t.admin.store.retrieve(),e);return{...s,...r}};import{useMutation as St,useQueryClient as Ut}from"@tanstack/react-query";var $C=e=>{let{client:t}=n(),s=Ut();return St(r=>t.admin.store.update(r),i(s,ie.details(),e))},ZC=e=>{let{client:t}=n(),s=Ut();return St(r=>t.admin.store.deleteCurrency(r),i(s,ie.details(),e))},eO=e=>{let{client:t}=n(),s=Ut();return St(r=>t.admin.store.deleteCurrency(r),i(s,ie.details(),e))};import{useQuery as Ms}from"@tanstack/react-query";var yo="admin_swaps",X=a(yo),mO=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ms(X.list(e),()=>s.admin.swaps.list(e),t);return{...r,...o}},pO=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ms(X.detail(e),()=>s.admin.swaps.retrieve(e),t);return{...r,...o}};import{useMutation as Pe,useQueryClient as Ce}from"@tanstack/react-query";var fO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(o=>s.admin.orders.createSwap(e,o),i(r,[p.detail(e),X.lists()],t))},PO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(o=>s.admin.orders.cancelSwap(e,o),i(r,[p.detail(e),X.lists()],t))},CO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(({swap_id:o,...m})=>s.admin.orders.fulfillSwap(e,o,m),i(r,[p.detail(e),X.lists(),f.all,d.lists()],t))},OO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(({swap_id:o,...m})=>s.admin.orders.createSwapShipment(e,o,m),i(r,p.detail(e),t))},gO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(o=>s.admin.orders.processSwapPayment(e,o),i(r,[p.detail(e),X.lists()],t))},xO=(e,t)=>{let{client:s}=n(),r=Ce();return Pe(({swap_id:o,fulfillment_id:m})=>s.admin.orders.cancelSwapFulfillment(e,o,m),i(r,[p.detail(e),X.lists()],t))};import{useQuery as Ks}from"@tanstack/react-query";var Ao="admin_tax_rates",l=a(Ao),hO=(e,t)=>{let{client:s}=n(),{data:r,...o}=Ks(l.list(e),()=>s.admin.taxRates.list(e),t);return{...r,...o}},TO=(e,t,s)=>{let{client:r}=n(),{data:o,...m}=Ks(l.detail(e),()=>r.admin.taxRates.retrieve(e,t),s);return{...o,...m}};import{useMutation as w,useQueryClient as F}from"@tanstack/react-query";var GO=e=>{let{client:t}=n(),s=F();return w(r=>t.admin.taxRates.create(r),i(s,l.lists(),e))},WO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.update(e,o),i(r,[l.lists(),l.detail(e)],t))},NO=(e,t)=>{let{client:s}=n(),r=F();return w(()=>s.admin.taxRates.delete(e),i(r,[l.lists(),l.detail(e)],t))},YO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addProducts(e,o),i(r,[l.lists(),l.detail(e)],t))},wO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeProducts(e,o),i(r,[l.lists(),l.detail(e)],t))},FO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addProductTypes(e,o),i(r,[l.lists(),l.detail(e)],t))},BO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeProductTypes(e,o),i(r,[l.lists(),l.detail(e)],t))},VO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.addShippingOptions(e,o),i(r,[l.lists(),l.detail(e)],t))},kO=(e,t)=>{let{client:s}=n(),r=F();return w(o=>s.admin.taxRates.removeShippingOptions(e,o),i(r,[l.lists(),l.detail(e)],t))};import{useMutation as Ge,useQueryClient as We}from"@tanstack/react-query";var tg=e=>{let{client:t}=n(),s=We();return Ge(r=>t.admin.uploads.create(r),i(s,void 0,e))},sg=e=>{let{client:t}=n(),s=We();return Ge(r=>t.admin.uploads.createProtected(r),i(s,void 0,e))},rg=e=>{let{client:t}=n(),s=We();return Ge(r=>t.admin.uploads.getPresignedDownloadUrl(r),i(s,void 0,e))},og=e=>{let{client:t}=n(),s=We();return Ge(r=>t.admin.uploads.delete(r),i(s,void 0,e))};import{useQuery as Qs}from"@tanstack/react-query";var fo="admin_users",hs=a(fo),ug=e=>{let{client:t}=n(),{data:s,...r}=Qs(hs.lists(),()=>t.admin.users.list(),e);return{...s,...r}},cg=(e,t)=>{let{client:s}=n(),{data:r,...o}=Qs(hs.detail(e),()=>s.admin.users.retrieve(e),t);return{...r,...o}};import{useMutation as he,useQueryClient as qt}from"@tanstack/react-query";var Cg=e=>{let{client:t}=n(),s=qt();return he(r=>t.admin.users.create(r),i(s,M.lists(),e))},Og=(e,t)=>{let{client:s}=n(),r=qt();return he(o=>s.admin.users.update(e,o),i(r,[M.lists(),M.detail(e)],t))},gg=(e,t)=>{let{client:s}=n(),r=qt();return he(()=>s.admin.users.delete(e),i(r,[M.detail(e),M.lists()],t))},xg=e=>{let{client:t}=n();return he(s=>t.admin.users.resetPassword(s),e)},Eg=e=>{let{client:t}=n();return he(s=>t.admin.users.sendResetPasswordToken(s),e)};import{useQuery as Po}from"@tanstack/react-query";var Co="paymentCollection",$=a(Co),Tg=(e,t)=>{let{client:s}=n(),{data:r,...o}=Po($.detail(e),()=>s.admin.paymentCollections.retrieve(e),t);return{...r,...o}};import{useMutation as Mt,useQueryClient as Kt}from"@tanstack/react-query";var Gg=(e,t)=>{let{client:s}=n(),r=Kt();return Mt(()=>s.admin.paymentCollections.delete(e),i(r,[$.detail(e),$.lists()],t))},Wg=(e,t)=>{let{client:s}=n(),r=Kt();return Mt(o=>s.admin.paymentCollections.update(e,o),i(r,[$.detail(e),$.lists()],t))},Ng=(e,t)=>{let{client:s}=n(),r=Kt();return Mt(()=>s.admin.paymentCollections.markAsAuthorized(e),i(r,[$.detail(e),$.lists()],t))};import{useQuery as Oo}from"@tanstack/react-query";var go="payment",Oe=a(go),jg=(e,t)=>{let{client:s}=n(),{data:r,...o}=Oo(Oe.detail(e),()=>s.admin.payments.retrieve(e),t);return{...r,...o}};import{useMutation as Ts,useQueryClient as Ds}from"@tanstack/react-query";var tx=(e,t)=>{let{client:s}=n(),r=Ds();return Ts(()=>s.admin.payments.capturePayment(e),i(r,[Oe.detail(e),Oe.lists()],t))},sx=(e,t)=>{let{client:s}=n(),r=Ds();return Ts(o=>s.admin.payments.refundPayment(e,o),i(r,[Oe.detail(e),Oe.lists()],t))};export{_m as CartProvider,qo as MedusaProvider,wo as SessionCartProvider,ve as adminAuthKeys,B as adminBatchJobsKeys,q as adminCollectionKeys,_e as adminCurrenciesKeys,x as adminCustomerGroupKeys,M as adminCustomerKeys,R as adminDiscountKeys,h as adminDraftOrderKeys,V as adminGiftCardKeys,E as adminInventoryItemsKeys,Re as adminInviteKeys,k as adminNoteKeys,be as adminNotificationKeys,c as adminOrderEditsKeys,p as adminOrderKeys,$ as adminPaymentCollectionQueryKeys,Oe as adminPaymentQueryKeys,y as adminPriceListKeys,T as adminProductCategoryKeys,d as adminProductKeys,$r as adminProductTagKeys,to as adminProductTypeKeys,g as adminPublishableApiKeysKeys,O as adminRegionKeys,j as adminReservationsKeys,fe as adminReturnKeys,J as adminReturnReasonKeys,P as adminSalesChannelsKeys,z as adminShippingOptionKeys,H as adminShippingProfileKeys,_ as adminStockLocationsKeys,ie as adminStoreKeys,X as adminSwapKeys,l as adminTaxRateKeys,hs as adminUserKeys,f as adminVariantKeys,Hs as cartKeys,wt as collectionKeys,ht as computeAmount,Gs as computeVariantPrice,je as customerKeys,To as formatAmount,ho as formatVariantPrice,ge as generateCartState,ke as getVariantPrice,tr as giftCardKeys,pe as orderEditQueryKeys,Z as orderKeys,U as paymentCollectionQueryKeys,$t as productKeys,dr as productTagKeys,lr as productTypeKeys,Ht as storeProductCategoryKeys,Nt as useAddShippingMethodToCart,_l as useAdminAcceptInvite,Pu as useAdminAddCustomersToCustomerGroup,ec as useAdminAddDiscountConditionResourceBatch,$P as useAdminAddLocationToSalesChannel,yA as useAdminAddProductsToCategory,Ld as useAdminAddProductsToCollection,XP as useAdminAddProductsToSalesChannel,bA as useAdminAddPublishableKeySalesChannelsBatch,bR as useAdminAddShippingMethod,ZC as useAdminAddStoreCurrency,GR as useAdminArchiveOrder,ip as useAdminBatchJob,np as useAdminBatchJobs,Rp as useAdminCancelBatchJob,yd as useAdminCancelClaim,fd as useAdminCancelClaimFulfillment,_R as useAdminCancelFulfillment,QR as useAdminCancelOrder,py as useAdminCancelOrderEdit,Bf as useAdminCancelReturn,PO as useAdminCancelSwap,xO as useAdminCancelSwapFulfillment,TR as useAdminCapturePayment,qd as useAdminCollection,Ud as useAdminCollections,hR as useAdminCompleteOrder,yp as useAdminConfirmBatchJob,dy as useAdminConfirmOrderEdit,lp as useAdminCreateBatchJob,ld as useAdminCreateClaim,Pd as useAdminCreateClaimShipment,vd as useAdminCreateCollection,Iu as useAdminCreateCustomer,yu as useAdminCreateCustomerGroup,sc as useAdminCreateDiscount,Mc as useAdminCreateDraftOrder,ac as useAdminCreateDynamicDiscountCode,vR as useAdminCreateFulfillment,zc as useAdminCreateGiftCard,Rl as useAdminCreateInventoryItem,Ll as useAdminCreateInvite,Cl as useAdminCreateLocationLevel,Zl as useAdminCreateNote,ty as useAdminCreateOrderEdit,rg as useAdminCreatePresignedDownloadUrl,Qy as useAdminCreatePriceList,Dy as useAdminCreatePriceListPrices,Dp as useAdminCreateProduct,cA as useAdminCreateProductCategory,Gp as useAdminCreateProductOption,YO as useAdminCreateProductTaxRates,FO as useAdminCreateProductTypeTaxRates,vA as useAdminCreatePublishableApiKey,tf as useAdminCreateRegion,aP as useAdminCreateReservation,qf as useAdminCreateReturnReason,JP as useAdminCreateSalesChannel,IR as useAdminCreateShipment,yC as useAdminCreateShippingOption,vC as useAdminCreateShippingProfile,VO as useAdminCreateShippingTaxRates,vP as useAdminCreateStockLocation,fO as useAdminCreateSwap,OO as useAdminCreateSwapShipment,GO as useAdminCreateTaxRate,Cg as useAdminCreateUser,Ip as useAdminCreateVariant,Vd as useAdminCurrencies,Ku as useAdminCustomer,iu as useAdminCustomerGroup,mu as useAdminCustomerGroupCustomers,au as useAdminCustomerGroups,Mu as useAdminCustomers,Id as useAdminDeleteCollection,fu as useAdminDeleteCustomerGroup,oc as useAdminDeleteDiscount,tc as useAdminDeleteDiscountConditionResourceBatch,Qc as useAdminDeleteDraftOrder,mc as useAdminDeleteDynamicDiscountCode,og as useAdminDeleteFile,Xc as useAdminDeleteGiftCard,Al as useAdminDeleteInventoryItem,bl as useAdminDeleteInvite,Pl as useAdminDeleteLocationLevel,tR as useAdminDeleteNote,sy as useAdminDeleteOrderEdit,ry as useAdminDeleteOrderEditItemChange,Gg as useAdminDeletePaymentCollection,Ty as useAdminDeletePriceList,vy as useAdminDeletePriceListPrices,_y as useAdminDeletePriceListProductPrices,Iy as useAdminDeletePriceListVariantPrices,_p as useAdminDeleteProduct,RA as useAdminDeleteProductCategory,Np as useAdminDeleteProductOption,wO as useAdminDeleteProductTaxRates,BO as useAdminDeleteProductTypeTaxRates,AA as useAdminDeleteProductsFromCategory,HP as useAdminDeleteProductsFromSalesChannel,IA as useAdminDeletePublishableApiKey,rf as useAdminDeleteRegion,pP as useAdminDeleteReservation,Kf as useAdminDeleteReturnReason,zP as useAdminDeleteSalesChannel,Xm as useAdminDeleteSession,fC as useAdminDeleteShippingOption,IC as useAdminDeleteShippingProfile,kO as useAdminDeleteShippingTaxRates,IP as useAdminDeleteStockLocation,eO as useAdminDeleteStoreCurrency,NO as useAdminDeleteTaxRate,gg as useAdminDeleteUser,bp as useAdminDeleteVariant,Vu as useAdminDiscount,nc as useAdminDiscountAddRegion,pc as useAdminDiscountCreateCondition,uc as useAdminDiscountRemoveCondition,ic as useAdminDiscountRemoveRegion,dc as useAdminDiscountUpdateCondition,Bu as useAdminDiscounts,Oc as useAdminDraftOrder,Tc as useAdminDraftOrderAddLineItem,hc as useAdminDraftOrderRegisterPayment,Dc as useAdminDraftOrderRemoveLineItem,vc as useAdminDraftOrderUpdateLineItem,Cc as useAdminDraftOrders,Ad as useAdminFulfillClaim,CO as useAdminFulfillSwap,ku as useAdminGetDiscountByCode,Ju as useAdminGetDiscountCondition,Fm as useAdminGetSession,wc as useAdminGiftCard,Yc as useAdminGiftCards,il as useAdminInventoryItem,al as useAdminInventoryItemLocationLevels,nl as useAdminInventoryItems,Ml as useAdminInvites,Hm as useAdminLogin,Ng as useAdminMarkPaymentCollectionAsAuthorized,kl as useAdminNote,Vl as useAdminNotes,pR as useAdminNotifications,od as useAdminOrder,kR as useAdminOrderEdit,ay as useAdminOrderEditAddLineItem,ny as useAdminOrderEditDeleteLineItem,oy as useAdminOrderEditUpdateLineItem,JR as useAdminOrderEdits,rd as useAdminOrders,jg as useAdminPayment,Tg as useAdminPaymentCollection,tx as useAdminPaymentsCapturePayment,sx as useAdminPaymentsRefundPayment,Oy as useAdminPriceList,Cy as useAdminPriceListProducts,Py as useAdminPriceLists,gO as useAdminProcessSwapPayment,Sp as useAdminProduct,rA as useAdminProductCategories,oA as useAdminProductCategory,Up as useAdminProductTagUsage,Fy as useAdminProductTags,Hy as useAdminProductTypes,Ep as useAdminProducts,SA as useAdminPublishableApiKey,qA as useAdminPublishableApiKeySalesChannels,UA as useAdminPublishableApiKeys,Ff as useAdminReceiveReturn,DR as useAdminRefundPayment,JA as useAdminRegion,of as useAdminRegionAddCountry,af as useAdminRegionAddFulfillmentProvider,pf as useAdminRegionAddPaymentProvider,mf as useAdminRegionDeleteFulfillmentProvider,df as useAdminRegionDeletePaymentProvider,jA as useAdminRegionFulfillmentOptions,nf as useAdminRegionRemoveCountry,kA as useAdminRegions,Cu as useAdminRemoveCustomersFromCustomerGroup,ZP as useAdminRemoveLocationFromSalesChannel,bd as useAdminRemoveProductsFromCollection,GA as useAdminRemovePublishableKeySalesChannelsBatch,my as useAdminRequestOrderEditConfirmation,LR as useAdminRequestReturn,Il as useAdminResendInvite,AR as useAdminResendNotification,Zf as useAdminReservation,$f as useAdminReservations,xg as useAdminResetPassword,Cf as useAdminReturnReason,Pf as useAdminReturnReasons,Lf as useAdminReturns,LA as useAdminRevokePublishableApiKey,fP as useAdminSalesChannel,PP as useAdminSalesChannels,Eg as useAdminSendResetPasswordToken,mC as useAdminShippingOption,aC as useAdminShippingOptions,qC as useAdminShippingProfile,UC as useAdminShippingProfiles,SP as useAdminStockLocation,EP as useAdminStockLocations,VC as useAdminStore,FC as useAdminStorePaymentProviders,BC as useAdminStoreTaxProviders,pO as useAdminSwap,mO as useAdminSwaps,TO as useAdminTaxRate,hO as useAdminTaxRates,Rd as useAdminUpdateClaim,_d as useAdminUpdateCollection,$d as useAdminUpdateCurrency,Lu as useAdminUpdateCustomer,Au as useAdminUpdateCustomerGroup,rc as useAdminUpdateDiscount,Kc as useAdminUpdateDraftOrder,Hc as useAdminUpdateGiftCard,yl as useAdminUpdateInventoryItem,fl as useAdminUpdateLocationLevel,eR as useAdminUpdateNote,KR as useAdminUpdateOrder,iy as useAdminUpdateOrderEdit,Wg as useAdminUpdatePaymentCollection,hy as useAdminUpdatePriceList,vp as useAdminUpdateProduct,lA as useAdminUpdateProductCategory,Wp as useAdminUpdateProductOption,_A as useAdminUpdatePublishableApiKey,sf as useAdminUpdateRegion,mP as useAdminUpdateReservation,Mf as useAdminUpdateReturnReason,jP as useAdminUpdateSalesChannel,AC as useAdminUpdateShippingOption,_C as useAdminUpdateShippingProfile,_P as useAdminUpdateStockLocation,$C as useAdminUpdateStore,WO as useAdminUpdateTaxRate,Og as useAdminUpdateUser,Lp as useAdminUpdateVariant,tg as useAdminUploadFile,sg as useAdminUploadProtectedFile,cg as useAdminUser,ug as useAdminUsers,zp as useAdminVariant,jp as useAdminVariants,Hp as useAdminVariantsInventory,Ni as useAuthorizePaymentSession,Yi as useAuthorizePaymentSessionsBatch,vm as useCart,Ri as useCartOrder,Ha as useCartShippingOptions,rm as useCartSwap,un as useCollection,cn as useCollections,bt as useCompleteCart,ni as useCompleteOrderEdit,It as useCreateCart,Un as useCreateCustomer,Yn as useCreateLineItem,Gt as useCreatePaymentSession,wa as useCreateReturn,mm as useCreateSwap,On as useCustomerOrders,oi as useDeclineOrderEdit,Fn as useDeleteLineItem,tn as useDeletePaymentSession,jo as useGetCart,_n as useGiftCard,Ei as useGrantOrderAccess,Gi as useManageMultiplePaymentSessions,Wi as useManagePaymentSession,Cn as useMeCustomer,n as useMedusa,li as useOrder,Hn as useOrderEdit,yi as useOrders,Ti as usePaymentCollection,wi as usePaymentCollectionRefreshPaymentSession,Ca as useProduct,Hi as useProductCategories,Xi as useProductCategory,oa as useProductTags,ua as useProductTypes,Pa as useProducts,en as useRefreshPaymentSession,Ma as useRegion,qa as useRegions,xi as useRequestOrderAccess,Ia as useReturnReason,_a as useReturnReasons,Fo as useSessionCart,Wt as useSetPaymentSession,za as useShippingOptions,sn as useStartCheckout,Lt as useUpdateCart,wn as useUpdateLineItem,qn as useUpdateMe,Zo as useUpdatePaymentSession};
//# sourceMappingURL=index.mjs.map